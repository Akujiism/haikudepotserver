<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <artifactId>haikudepotserver-parent</artifactId>
        <groupId>org.haikuos</groupId>
        <relativePath>../haikudepotserver-parent</relativePath>
        <version>1.0.7-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>haikudepotserver-rpm-common</artifactId>
    <packaging>jar</packaging>
    <description>
        This project is a place where support resources that contribute to the RPM assembly can be
        bundled so that they can be (re)used in the specific RPMs later.
    </description>

    <build>

        <!--
        This will prevent the resources from being filtered in the bundling process so that they can
        be filtered (have variables replaced) when they are unbundled ready for inclusion in the
        RPM.
        -->

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>

        <plugins>

            <!--
            This will create a bundle that can be (re)used in assembly of the various RPMs such as
            production and test.  Note that again, the filtering is disabled in order to ensure that
            the raw resources can then be filtered in the unpacking process.
            -->

            <plugin>
                <artifactId>maven-remote-resources-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>bundle</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>*</include>
                    </includes>
                    <useDefaultFilterDelimiters>false</useDefaultFilterDelimiters>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>