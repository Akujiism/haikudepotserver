package org.haikuos.haikudepotserver.dataobjects.auto;

import java.util.Date;
import java.util.List;

import org.haikuos.haikudepotserver.dataobjects.Architecture;
import org.haikuos.haikudepotserver.dataobjects.PermissionPublicRepository;
import org.haikuos.haikudepotserver.dataobjects.PermissionUserRepository;
import org.haikuos.haikudepotserver.dataobjects.support.AbstractDataObject;

/**
 * Class _Repository was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Repository extends AbstractDataObject {

    public static final String ACTIVE_PROPERTY = "active";
    public static final String CODE_PROPERTY = "code";
    public static final String CREATE_TIMESTAMP_PROPERTY = "createTimestamp";
    public static final String MODIFY_TIMESTAMP_PROPERTY = "modifyTimestamp";
    public static final String URL_PROPERTY = "url";
    public static final String ARCHITECTURE_PROPERTY = "architecture";
    public static final String PERMISSION_PUBLIC_REPOSITORIES_PROPERTY = "permissionPublicRepositories";
    public static final String PERMISSION_USER_REPOSITORIES_PROPERTY = "permissionUserRepositories";

    public static final String ID_PK_COLUMN = "id";

    public void setActive(Boolean active) {
        writeProperty(ACTIVE_PROPERTY, active);
    }
    public Boolean getActive() {
        return (Boolean)readProperty(ACTIVE_PROPERTY);
    }

    public void setCode(String code) {
        writeProperty(CODE_PROPERTY, code);
    }
    public String getCode() {
        return (String)readProperty(CODE_PROPERTY);
    }

    public void setCreateTimestamp(Date createTimestamp) {
        writeProperty(CREATE_TIMESTAMP_PROPERTY, createTimestamp);
    }
    public Date getCreateTimestamp() {
        return (Date)readProperty(CREATE_TIMESTAMP_PROPERTY);
    }

    public void setModifyTimestamp(Date modifyTimestamp) {
        writeProperty(MODIFY_TIMESTAMP_PROPERTY, modifyTimestamp);
    }
    public Date getModifyTimestamp() {
        return (Date)readProperty(MODIFY_TIMESTAMP_PROPERTY);
    }

    public void setUrl(String url) {
        writeProperty(URL_PROPERTY, url);
    }
    public String getUrl() {
        return (String)readProperty(URL_PROPERTY);
    }

    public void setArchitecture(Architecture architecture) {
        setToOneTarget(ARCHITECTURE_PROPERTY, architecture, true);
    }

    public Architecture getArchitecture() {
        return (Architecture)readProperty(ARCHITECTURE_PROPERTY);
    }


    public void addToPermissionPublicRepositories(PermissionPublicRepository obj) {
        addToManyTarget(PERMISSION_PUBLIC_REPOSITORIES_PROPERTY, obj, true);
    }
    public void removeFromPermissionPublicRepositories(PermissionPublicRepository obj) {
        removeToManyTarget(PERMISSION_PUBLIC_REPOSITORIES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PermissionPublicRepository> getPermissionPublicRepositories() {
        return (List<PermissionPublicRepository>)readProperty(PERMISSION_PUBLIC_REPOSITORIES_PROPERTY);
    }


    public void addToPermissionUserRepositories(PermissionUserRepository obj) {
        addToManyTarget(PERMISSION_USER_REPOSITORIES_PROPERTY, obj, true);
    }
    public void removeFromPermissionUserRepositories(PermissionUserRepository obj) {
        removeToManyTarget(PERMISSION_USER_REPOSITORIES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PermissionUserRepository> getPermissionUserRepositories() {
        return (List<PermissionUserRepository>)readProperty(PERMISSION_USER_REPOSITORIES_PROPERTY);
    }


}
